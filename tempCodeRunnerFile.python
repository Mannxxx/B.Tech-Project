import cv2
import numpy as np

def extract_blade_tip(image_path):
    # Load the image
    image = cv2.imread(image_path)

    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply edge detection (adjust the parameters as needed)
    edges = cv2.Canny(gray, threshold1=100, threshold2=200)

    # Find contours in the edge image
    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Select the contour with the largest area as the blade contour
    blade_contour = max(contours, key=cv2.contourArea)

    # Find the minimum enclosing circle of the blade contour
    (x, y), radius = cv2.minEnclosingCircle(blade_contour)
    center = (int(x), int(y))

    # Calculate the tip coordinates
    tip_coordinates = (int(x), int(y - radius))

    return tip_coordinates

# Example usage
image_path = "C:/Users/Mansi/Desktop/BTP-1/Image-rotor.png"
blade_tip = extract_blade_tip(image_path)
print("Blade tip coordinates:", blade_tip)
